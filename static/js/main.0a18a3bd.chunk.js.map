{"version":3,"sources":["images/home/img_home.jpg","images/home/img_about.jpg","images/logo/logo_home.jpg","components/HYTabView.tsx","pages/home/HomeContentView.tsx","pages/home/AboutContentView.tsx","pages/home/BottomView.tsx","pages/home/Home.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","TabItem","label","value","Object","classCallCheck","this","HYTabView","props","_this","possibleConstructorReturn","getPrototypeOf","call","p_onItemClick","tab","state","selectedItem","setState","onItemClick","p_getTabItem","tabItem","selItem","line","clsName","react_default","a","createElement","className","key","onClick","e","items","doms","tabItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","push","err","return","Component","HomeContentView","src","require","alt","AboutContentView","year","Date","getFullYear","tabHome","tabAbount","Home","p_onTabClick","selectedTab","contentDom","HomeContentView_HomeContentView","AboutContentView_AboutContentView","HYTabView_HYTabView","BottomView_AboutContentView","Boolean","window","location","hostname","match","ReactDOM","render","Home_Home","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a18a3bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img_home.01a8a54a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img_about.0862cd03.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_home.06dc99e9.jpg\";","import React, { Component } from 'react';\nimport './tabview.css';\n\nexport class TabItem {\n    label: string;\n    value: string;\n\n    constructor(label: string, value: string) {\n        this.label = label;\n        this.value = value;\n    }\n}\n\nexport interface TabViewProps {\n    items: TabItem[];   // 所有标签项\n    selectedItem?: TabItem;     // 被选中的，默认 第一个\n    onItemClick: ((tab: TabItem) => void);  // 回调\n}\n\nclass TabState {\n    selectedItem: TabItem;\n\n    constructor(item: TabItem) {\n        this.selectedItem = item;\n    }\n}\n\nexport default class HYTabView extends Component<TabViewProps, TabState> {\n    constructor(props: TabViewProps) {\n        super(props);\n        // 保存已选中的Tab\n        let selItem = this.props.selectedItem || this.props.items[0];\n        this.state = {\n            selectedItem: selItem,\n        }\n    }\n\n    p_onItemClick = (tab: TabItem) => {\n        let { selectedItem } = this.state;\n        if (selectedItem.label === tab.label) {\n            // 已经选中\n            // console.log('selected do nothing');\n        } else {\n            this.setState({\n                selectedItem: tab\n            });\n\n            this.props.onItemClick(tab);\n        }\n    }\n\n    p_getTabItem = (tabItem: TabItem, selItem: TabItem) => {\n        let line = null;\n        let clsName = 'hy-tab-item';\n        if (tabItem.label === selItem.label) {\n            line = <div className='hy-tab-item-sel'></div>;\n            clsName = 'hy-tab-item-selected';\n        }\n        return (\n            <div className={clsName} key={tabItem.label} onClick={e => this.p_onItemClick(tabItem)}>\n                <div>{tabItem.value}</div>\n                {line}\n            </div>\n        )\n    }\n\n    render() {\n        let doms = [];\n        let tabItems = this.props.items;\n        let selItem = this.state.selectedItem;\n        for (let item of tabItems) {\n            doms.push(this.p_getTabItem(item, selItem));\n        }\n        return (\n            <div className='hy-tab'>\n                {doms}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './home.css';\n\nexport default class HomeContentView extends Component {\n\n    render() {\n        return (\n            <div className='flex-row-center'>\n                <div className='content-img'>\n                    <img src={require('../../images/home/img_home.jpg')} alt='logo'></img>\n                </div>\n                <div className='content-text'>\n                    <div className='title-1'>禾游网络</div>\n                    <div className='title-2'>专注移动网络服务</div>\n                    <div className='text-1'>\n                        <br />用户一键式呼叫，\n                        <br />黄金急救圈 实现互联网自救、互救，\n                        <br />客服在线指导，120第一时间奔赴现场。\n                        <br />打造线上志愿者联盟，急着周边志愿者，\n                        <br />通过APP发布、参与救援任务。\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './home.css';\n\nexport default class AboutContentView extends Component {\n\n    render() {\n        return (\n            <div className='flex-row-center'>\n                <div className='content-img'>\n                    <img src={require('../../images/home/img_about.jpg')}></img>\n                </div>\n                <div className='content-text'>\n                    <div className='title-1'>关于我们</div>\n                    <div className='title-2'>一个有梦想的公司</div>\n                    <div className='text-1'>\n                        <br/>禾游网络， \n                        <br/>专注于移动互联网服务，\n                        <br/>精心打造最优质的移动产品，\n                        <br/>邮箱：admin@heyou.sh.cn\n                        <br/>电话：021-33356586\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './css/bottom.css';\n\nexport default class AboutContentView extends Component {\n\n    render() {\n        let now = new Date();\n        let year = now.getFullYear();\n        return (\n            <div className='bottom-container'>\n                Copyright © 2012-{year} Heyou All Rights Reserved 上海禾游网络科技有限公司 版权所有\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport './home.css';\nimport HYTabView, { TabItem } from '../../components/HYTabView';\nimport HomeContentView from './HomeContentView';\nimport AbountContentView from './AboutContentView';\nimport BottomView from './BottomView';\n\nconst tabHome = new TabItem('home', '首页');\nconst tabAbount = new TabItem('about', '关于我们');\n\ninterface HomeState {\n    selectedTab: TabItem;\n}\n\nexport default class Home extends Component<any, HomeState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            selectedTab: tabHome\n        }\n    }\n\n    p_onTabClick = (tab: TabItem) => {\n        this.setState({\n            selectedTab: tab\n        });\n    }\n\n    render() {\n        let contentDom = null;\n        let { selectedTab } = this.state;\n        if (selectedTab.label === tabHome.label) {\n            contentDom = <HomeContentView/>;\n        } else if (selectedTab.label === tabAbount.label) {\n            contentDom = <AbountContentView/>;\n        }\n\n        return (\n            <div>\n                <div className='hy-header'>\n                    <div className='logo'>\n                        <img src={require('../../images/logo/logo_home.jpg')} alt='logo' />\n                    </div>\n                    <HYTabView\n                        items={[tabHome, tabAbount]}\n                        onItemClick={this.p_onTabClick}\n                    />\n                </div>\n                <div>{contentDom}</div>\n                <BottomView/>\n            </div>\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './pages/home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}